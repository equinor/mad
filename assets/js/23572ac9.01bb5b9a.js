"use strict";(self.webpackChunk_equinor_mad_platform_docs=self.webpackChunk_equinor_mad_platform_docs||[]).push([[157],{1054:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"mad-tag-ocr/getting-started","title":"How to get started","description":"Learn how to configure your app to use mad tag ocr!","source":"@site/docs/mad-tag-ocr/2-getting-started.md","sourceDirName":"mad-tag-ocr","slug":"/mad-tag-ocr/getting-started","permalink":"/mad/docs/mad-tag-ocr/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/mad/tree/main/apps/docs/shared/docs/mad-tag-ocr/2-getting-started.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Getting started","description":"Learn how to configure your app to use mad tag ocr!"},"sidebar":"tagOCRSidebar","previous":{"title":"Introduction","permalink":"/mad/docs/mad-tag-ocr/introduction"},"next":{"title":"API","permalink":"/mad/docs/mad-tag-ocr/api"}}');var a=n(1085),o=n(1184);const s={sidebar_label:"Getting started",description:"Learn how to configure your app to use mad tag ocr!"},i="How to get started",c={},d=[{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"how-to-get-started",children:"How to get started"})}),"\n",(0,a.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:"npm install @equinor/react-native-mad-tag-ocr"})}),"\n",(0,a.jsx)(t.p,{children:"This library has the following peer dependencies that you need to install in your project. Please\nrefer to the documentation below for information on how to do this."}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://github.com/mrousavy/react-native-vision-camera",children:"React Native Vision Camera"})," provides\nthe underlying camera component that support frame processor plugins such as OCR."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://github.com/ismaelsousa/vision-camera-ocr#readme",children:"Vision Camera OCR"})," is a frame\nprocessor plugin for the vision camera package that provides OCR."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://github.com/margelo/react-native-worklets-core",children:"React Native Worklets Core"})," for running\nframe processors on a seperate thread."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"https://shopify.github.io/react-native-skia/",children:"React Native Skia"})," for drawing on the camera\nscreen Follow."]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,a.jsxs)(t.p,{children:["This library exports a component called ",(0,a.jsx)(t.code,{children:"OCRCamera"})," that you can import into your project. The\nexample below shows how it can be used."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { OCRCamera } from "@equinor/react-native-mad-tag-ocr";\n\nexport const MyComponent = () => {\n    const { hasPermission, requestPermission } = useCameraPermission();\n\n    useFocusEffect(() => void requestPermission());\n\n    const onScanResult = (tag: string) => {\n        // do someting here\n    };\n\n    const onScanCancel = () => {\n        // do something here\n    };\n\n    return <OCRCamera onSelectTag={onScanResult} onClose={onScanCancel} />;\n};\n'})}),"\n",(0,a.jsxs)(t.p,{children:["Remember to call the ",(0,a.jsx)(t.code,{children:"requestPermission"})," function from ",(0,a.jsx)(t.code,{children:"react-native-vision-camera"})," before using the\nOCR camera. Also, if your project is using the ",(0,a.jsx)(t.a,{href:"https://reactnavigation.org/",children:"React Navigation"}),"\npackage, you can call ",(0,a.jsx)(t.code,{children:"useFocusEffect"})," to make sure permission is requested every time you navigate\nto the OCR camera. This ensures the user is always asked for permissions even if the user initially\nclicked decline."]}),"\n",(0,a.jsx)(t.p,{children:"Note that the OCR camera currently only supports viewing in portrait mode."})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var r=n(4041);const a={},o=r.createContext(a);function s(e){const t=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);