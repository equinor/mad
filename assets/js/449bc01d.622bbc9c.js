"use strict";(self.webpackChunk_equinor_mad_platform_docs=self.webpackChunk_equinor_mad_platform_docs||[]).push([[3612],{118:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"mad-navigation/usage","title":"Usage","description":"Learn how to use this package!","source":"@site/docs/mad-navigation/3-usage.md","sourceDirName":"mad-navigation","slug":"/mad-navigation/usage","permalink":"/mad/docs/mad-navigation/usage","draft":false,"unlisted":false,"editUrl":"https://github.com/equinor/mad/tree/main/apps/docs/shared/docs/mad-navigation/3-usage.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Usage","description":"Learn how to use this package!"},"sidebar":"navigationSidebar","previous":{"title":"Installation","permalink":"/mad/docs/mad-navigation/installation"}}');var o=t(1085),r=t(1184);const i={sidebar_label:"Usage",description:"Learn how to use this package!"},s="Usage",c={},d=[];function u(e){const a={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.header,{children:(0,o.jsx)(a.h1,{id:"usage",children:"Usage"})}),"\n",(0,o.jsxs)(a.p,{children:["If you want to add custom sub-headers to your navigation system, you first have to create custom\nnavigator-creator functions. You can do so with ",(0,o.jsx)(a.code,{children:"createBottomTabNavigatorFactory"}),",\n",(0,o.jsx)(a.code,{children:"createNativeStackNavigatorFactory"})," and ",(0,o.jsx)(a.code,{children:"createStackNavigatorFactory"}),"."]}),"\n",(0,o.jsx)(a.p,{children:"Step 1: Create your custom sub-header:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-tsx",children:'import { Text } from "react-native";\nexport const CustomSubHeader = () => <Text>This is a custom sub-header</Text>;\n'})}),"\n",(0,o.jsx)(a.p,{children:"Step 2: Create your new navigator-creator functions:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-tsx",children:'import {\n    createBottomTabNavigatorFactory,\n    createNativeStackNavigatorFactory,\n    createStackNavigatorFactory,\n} from "@equinor/mad-navigation";\nimport { CustomSubHeader } from "path/to/subHeader";\n\nexport const createBottomTabNavigator = createBottomTabNavigatorFactory(CustomSubHeader);\nexport const createNativeStackNavigator = createNativeStackNavigatorFactory(CustomSubHeader);\nexport const createStackNavigator = createStackNavigatorFactory(CustomSubHeader);\n'})}),"\n",(0,o.jsxs)(a.p,{children:["Follow ",(0,o.jsx)(a.a,{href:"https://reactnavigation.org/docs/getting-started/",children:"React Navigation\u2019s documentation"}),". When\nyou get to the point where you are creating a navigator, import your custom navigator-creators."]}),"\n",(0,o.jsxs)(a.p,{children:["You can also import ",(0,o.jsx)(a.code,{children:"NavigationContainer"})," from this package if you need a ",(0,o.jsx)(a.code,{children:"onRouteChange"})," prop."]}),"\n",(0,o.jsx)(a.p,{children:"For example:"}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-tsx",children:"//import { createNativeStackNavigator } from '@react-navigation/native-stack';\n//replace the above line with the line below\nimport { createNativeStackNavigator } from \"path/to/createNativeStackNavigator\";\n"})}),"\n",(0,o.jsxs)(a.p,{children:["Once you've finished the steps above, you should see your custom sub-header in your application. By\ndefault, the sub-header will display if navigator\u2019s header is displayed. if you want to overwrite\nthis behaviour, use the custom ",(0,o.jsx)(a.code,{children:"customSubHeaderShown"})," option. This option can be applied in the\n",(0,o.jsx)(a.code,{children:"Screen"}),"\u2019s ",(0,o.jsx)(a.code,{children:"options"})," prop, or in the ",(0,o.jsx)(a.code,{children:"Group"})," or ",(0,o.jsx)(a.code,{children:"Navigator"}),"'s ",(0,o.jsx)(a.code,{children:"screenOptions"})," prop. You can also use\n",(0,o.jsx)(a.code,{children:"customSubHeaderFloat"})," if you want the sub header to float above the content instead of pushing the\nscreen's content down."]}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-tsx",children:'<Stack.Navigator\n    screenOptions={{\n        // add it here\n        customSubHeaderShown: false,\n        customSubHeaderFloat: false,\n    }}\n>\n    <Stack.Group\n        screenOptions={{\n            // or here\n            customSubHeaderShown: true,\n            customSubHeaderFloat: true,\n        }}\n    >\n        <Stack.Screen\n            name="Discover"\n            component={DiscoverScreen}\n            options={{\n                // or here\n                customSubHeaderShown: false,\n                customSubHeaderFloat: false,\n            }}\n        />\n    </Stack.Group>\n</Stack.Navigator>\n'})}),"\n",(0,o.jsx)(a.p,{children:(0,o.jsxs)(a.em,{children:["CAUTION: sub-headers will not work properly if ",(0,o.jsx)(a.code,{children:"headerLargeTitle"})," is set to true, and\n",(0,o.jsx)(a.code,{children:"headerLargeTitle"})," make it hard for elements in your application to calculate header height. It is\ntherefore not recommended to use ",(0,o.jsx)(a.code,{children:"headerLargeTitle"}),". If you still decide to use it, we recommend\ndisabling sub-headers where it is used, as the sub-headers may cause the header to not work as\nexpected."]})}),"\n",(0,o.jsx)(a.pre,{children:(0,o.jsx)(a.code,{className:"language-tsx",children:'<DiscoverStack.Navigator\n    initialRouteName="Discover"\n    screenOptions={{\n        headerLargeTitle: true,\n        headerLargeTitleShadowVisible: true,\n        headerLargeTitleStyle: { fontFamily: "Equinor-Bold" },\n        headerTitleStyle: {\n            fontFamily: "Equinor-Regular",\n        },\n        headerBackTitleStyle: { fontFamily: "Equinor-Regular" },\n        customSubHeaderShown: false,\n    }}\n>\n'})})]})}function l(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},1184:(e,a,t)=>{t.d(a,{R:()=>i,x:()=>s});var n=t(4041);const o={},r=n.createContext(o);function i(e){const a=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function s(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(r.Provider,{value:a},e.children)}}}]);